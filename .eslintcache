[{"/home/tom/code/react/lets_pop_to/src/index.tsx":"1","/home/tom/code/react/lets_pop_to/src/App.tsx":"2","/home/tom/code/react/lets_pop_to/src/redux/store.tsx":"3","/home/tom/code/react/lets_pop_to/src/features/navBar/NavBar.tsx":"4","/home/tom/code/react/lets_pop_to/src/helpers/cameliseKeys.ts":"5","/home/tom/code/react/lets_pop_to/src/helpers/formatPrice.ts":"6","/home/tom/code/react/lets_pop_to/src/helpers/parseTime.ts":"7","/home/tom/code/react/lets_pop_to/src/features/inspireMe/inspireMeSlice.ts":"8","/home/tom/code/react/lets_pop_to/src/features/inspireMe/InspireMe.tsx":"9","/home/tom/code/react/lets_pop_to/src/features/inspireMe/PlaceInput.tsx":"10","/home/tom/code/react/lets_pop_to/src/features/footer/Footer.tsx":"11","/home/tom/code/react/lets_pop_to/src/constants/routes.ts":"12","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/BrowseInspiredFlights.tsx":"13","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/DestinationCard.tsx":"14","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/fetchPhoto.ts":"15","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/DestinationGrid.tsx":"16","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/Filters.tsx":"17","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/DirectPicker.tsx":"18","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PricePicker.tsx":"19","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PriceRange.tsx":"20","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PriceSlider.tsx":"21","/home/tom/code/react/lets_pop_to/src/features/flights/Flights.tsx":"22","/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/filtersSlice.ts":"23","/home/tom/code/react/lets_pop_to/src/features/flights/fetchFlights.ts":"24","/home/tom/code/react/lets_pop_to/src/features/flights/Flight.tsx":"25","/home/tom/code/react/lets_pop_to/src/features/flights/ReferralButton.tsx":"26","/home/tom/code/react/lets_pop_to/src/features/inspireMe/MultiDatePicker.tsx":"27","/home/tom/code/react/lets_pop_to/src/features/flights/CalendarCard.tsx":"28","/home/tom/code/react/lets_pop_to/src/features/flights/FlightDestinations.tsx":"29","/home/tom/code/react/lets_pop_to/src/features/flights/DestinationDivider.tsx":"30","/home/tom/code/react/lets_pop_to/src/features/flights/Logo.tsx":"31","/home/tom/code/react/lets_pop_to/src/features/flights/fetchLogo.ts":"32","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/SelectNewDates.tsx":"33","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/NormalSelector/NormalCalendarContainer.tsx":"34","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/SpecificDatesSelector/SpecificDatesContainer.tsx":"35","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/WeekdaySelectorContainer.tsx":"36","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/SpecificDatesSelector/SpecificDatesCalendar.tsx":"37","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/NormalSelector/NormalCalendar.tsx":"38","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/DateSelector.tsx":"39","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/WeekdaySelector.tsx":"40","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/MonthsSelector.tsx":"41","/home/tom/code/react/lets_pop_to/src/helpers/isNumeric.ts":"42"},{"size":523,"mtime":1610465581349,"results":"43","hashOfConfig":"44"},{"size":1247,"mtime":1612367374337,"results":"45","hashOfConfig":"44"},{"size":633,"mtime":1611757648085,"results":"46","hashOfConfig":"44"},{"size":2045,"mtime":1612878102163,"results":"47","hashOfConfig":"44"},{"size":453,"mtime":1608654860198,"results":"48","hashOfConfig":"44"},{"size":1621,"mtime":1609263537154,"results":"49","hashOfConfig":"44"},{"size":1301,"mtime":1610465550053,"results":"50","hashOfConfig":"44"},{"size":688,"mtime":1612036532042,"results":"51","hashOfConfig":"44"},{"size":3730,"mtime":1613084887203,"results":"52","hashOfConfig":"44"},{"size":3306,"mtime":1610465501590,"results":"53","hashOfConfig":"44"},{"size":1219,"mtime":1610465483830,"results":"54","hashOfConfig":"44"},{"size":199,"mtime":1611760933334,"results":"55","hashOfConfig":"44"},{"size":1285,"mtime":1611760363684,"results":"56","hashOfConfig":"44"},{"size":5502,"mtime":1612912216777,"results":"57","hashOfConfig":"44"},{"size":609,"mtime":1612913133741,"results":"58","hashOfConfig":"44"},{"size":7244,"mtime":1612900662291,"results":"59","hashOfConfig":"44"},{"size":296,"mtime":1611759370549,"results":"60","hashOfConfig":"44"},{"size":1633,"mtime":1611758086717,"results":"61","hashOfConfig":"44"},{"size":1747,"mtime":1611776485083,"results":"62","hashOfConfig":"44"},{"size":1309,"mtime":1611759335810,"results":"63","hashOfConfig":"44"},{"size":4422,"mtime":1613089410985,"results":"64","hashOfConfig":"44"},{"size":1736,"mtime":1612030798342,"results":"65","hashOfConfig":"44"},{"size":974,"mtime":1611761256999,"results":"66","hashOfConfig":"44"},{"size":913,"mtime":1611770657202,"results":"67","hashOfConfig":"44"},{"size":4743,"mtime":1612032567003,"results":"68","hashOfConfig":"44"},{"size":950,"mtime":1611939331361,"results":"69","hashOfConfig":"44"},{"size":3166,"mtime":1611858105556,"results":"70","hashOfConfig":"44"},{"size":3512,"mtime":1612032166650,"results":"71","hashOfConfig":"44"},{"size":1179,"mtime":1612029086461,"results":"72","hashOfConfig":"44"},{"size":627,"mtime":1611943176437,"results":"73","hashOfConfig":"44"},{"size":940,"mtime":1612029137214,"results":"74","hashOfConfig":"44"},{"size":856,"mtime":1612021209966,"results":"75","hashOfConfig":"44"},{"size":1798,"mtime":1613084912618,"results":"76","hashOfConfig":"44"},{"size":314,"mtime":1613085096119,"results":"77","hashOfConfig":"44"},{"size":353,"mtime":1613084978481,"results":"78","hashOfConfig":"44"},{"size":7891,"mtime":1613100988729,"results":"79","hashOfConfig":"44"},{"size":10268,"mtime":1613145170788,"results":"80","hashOfConfig":"44"},{"size":5280,"mtime":1613084966697,"results":"81","hashOfConfig":"44"},{"size":2418,"mtime":1613084934474,"results":"82","hashOfConfig":"44"},{"size":7273,"mtime":1613094929349,"results":"83","hashOfConfig":"44"},{"size":4065,"mtime":1613096963366,"results":"84","hashOfConfig":"44"},{"size":104,"mtime":1613087972627,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"xpxue0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/tom/code/react/lets_pop_to/src/index.tsx",[],["174","175"],"/home/tom/code/react/lets_pop_to/src/App.tsx",[],"/home/tom/code/react/lets_pop_to/src/redux/store.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/navBar/NavBar.tsx",[],"/home/tom/code/react/lets_pop_to/src/helpers/cameliseKeys.ts",[],["176","177"],"/home/tom/code/react/lets_pop_to/src/helpers/formatPrice.ts",[],"/home/tom/code/react/lets_pop_to/src/helpers/parseTime.ts",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/inspireMeSlice.ts",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/InspireMe.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/PlaceInput.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/footer/Footer.tsx",[],"/home/tom/code/react/lets_pop_to/src/constants/routes.ts",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/BrowseInspiredFlights.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/DestinationCard.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/fetchPhoto.ts",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/DestinationGrid.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/Filters.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/DirectPicker.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PricePicker.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PriceRange.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/PriceSlider.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/Flights.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/browseInspiredFlights/Filters/filtersSlice.ts",[],"/home/tom/code/react/lets_pop_to/src/features/flights/fetchFlights.ts",[],"/home/tom/code/react/lets_pop_to/src/features/flights/Flight.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/ReferralButton.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/MultiDatePicker.tsx",[],["178","179"],"/home/tom/code/react/lets_pop_to/src/features/flights/CalendarCard.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/FlightDestinations.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/DestinationDivider.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/Logo.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/flights/fetchLogo.ts",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/SelectNewDates.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/NormalSelector/NormalCalendarContainer.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/SpecificDatesSelector/SpecificDatesContainer.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/WeekdaySelectorContainer.tsx",["180"],"import { range } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isNumeric } from '../../../../../helpers/isNumeric';\nimport { setNewDates } from '../../../inspireMeSlice';\nimport { MonthSelector } from './MonthsSelector';\nimport { WeekdaySelector } from './WeekdaySelector';\nimport { DateType } from './../../../../../type';\n\nexport interface WeekdayType {\n  weekday:\n    | 'Monday'\n    | 'Tuesday'\n    | 'Wednesday'\n    | 'Thursday'\n    | 'Friday'\n    | 'Saturday'\n    | 'Sunday';\n  selected: boolean;\n}\n\nexport interface MonthType {\n  // TODO: find a better way to say a number between range, or a number with x characters\n  name: string;\n  month: string;\n  year: string;\n  selected: boolean;\n}\n\ninterface SelectionsType {\n  outbound: WeekdayType[];\n  inbound: WeekdayType[];\n  months: MonthType[];\n}\n\nconst initialState: SelectionsType = {\n  outbound: [\n    {\n      weekday: 'Monday',\n      selected: false,\n    },\n    {\n      weekday: 'Tuesday',\n      selected: false,\n    },\n    {\n      weekday: 'Wednesday',\n      selected: false,\n    },\n    {\n      weekday: 'Thursday',\n      selected: false,\n    },\n    {\n      weekday: 'Friday',\n      selected: false,\n    },\n    {\n      weekday: 'Saturday',\n      selected: false,\n    },\n    {\n      weekday: 'Sunday',\n      selected: false,\n    },\n  ],\n  inbound: [\n    {\n      weekday: 'Monday',\n      selected: false,\n    },\n    {\n      weekday: 'Tuesday',\n      selected: false,\n    },\n    {\n      weekday: 'Wednesday',\n      selected: false,\n    },\n    {\n      weekday: 'Thursday',\n      selected: false,\n    },\n    {\n      weekday: 'Friday',\n      selected: false,\n    },\n    {\n      weekday: 'Saturday',\n      selected: false,\n    },\n    {\n      weekday: 'Sunday',\n      selected: false,\n    },\n  ],\n  months: [],\n};\n\nexport const WeekdaySelectorContainer = ({\n  tripType,\n  closePopup,\n}: {\n  tripType: '' | 'oneWay' | 'return';\n  closePopup: () => void;\n}) => {\n  const [selections, setSelections] = useState<SelectionsType>(initialState);\n  const [component, setComponent] = useState<'outbound' | 'inbound' | 'months'>(\n    'outbound'\n  );\n  const [durationRange, setDurationRange] = useState<number[]>([0, 14]);\n  const [completed, setCompleted] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  const handleDaySelections = (updatedSelections: WeekdayType[]): void => {\n    if (component === 'outbound') {\n      console.log('setting outbound');\n      setSelections({ ...selections, outbound: updatedSelections });\n    }\n    if (component === 'inbound') {\n      //\n      console.log('setting inbound');\n      setSelections({ ...selections, inbound: updatedSelections });\n    }\n  };\n\n  const handleMonthSelections = (updatedSelections: MonthType[]) => {\n    console.log('setting months');\n    setSelections({ ...selections, months: updatedSelections });\n  };\n\n  const handleDurationRange = (durationRange: number[]) => {\n    setDurationRange(durationRange);\n  };\n\n  const setDates = useCallback(() => {\n    const { outbound, inbound, months } = selections;\n\n    const outboundDays = outbound\n      .filter((outbound) => outbound.selected)\n      .map((outbound) => outbound.weekday);\n\n    const inboundDays = inbound\n      .filter((inbound) => inbound.selected)\n      .map((inbound) => inbound.weekday);\n    const outboundDates: string[] = [];\n\n    months.forEach(({ year, month, name }) => {\n      const dayCount: number = daysInMonth({ year, month });\n      for (let i of range(dayCount)) {\n        const weekDay = getWeekdayFromMonth({ day: i, month, year });\n        if (checkWeekday(weekDay)) {\n          //@ts-ignore because typescript doesn't realise that I've already checked\n          // the type of weekDay is correct\n          if (outboundDays.includes(weekDay)) {\n            outboundDates.push(`${year}-${month}-${i < 10 ? `0${i}` : i}`);\n          }\n        }\n      }\n    });\n    if (!outboundDates.length) {\n      // TODO: handle possible (though unlikely as it's been checked) error here\n      return;\n    }\n\n    if (tripType === 'oneWay') {\n      dispatch(\n        setNewDates(\n          outboundDates.map((date) => {\n            return { outbound: date, inbound: '' };\n          })\n        )\n      );\n      return;\n    }\n\n    let dateArray: DateType[] = [];\n\n    outboundDates.forEach((date) => {\n      for (let i of range(durationRange[0], durationRange[1])) {\n        const newDate = datePlusDays({ date, days: i });\n        if (newDate) {\n          const weekDay = getWeekdayFromDate({ date: newDate });\n          if (checkWeekday(weekDay)) {\n            //@ts-ignore\n            if (inboundDays.includes(weekDay)) {\n              dateArray.push({ outbound: date, inbound: newDate });\n            }\n          }\n        }\n      }\n    });\n\n    if (!dateArray.length) {\n      // TODO: also error handle\n      return;\n    }\n\n    dispatch(setNewDates(dateArray));\n  }, [dispatch, durationRange, selections, tripType]);\n\n  const checkValid = useCallback((): boolean => {\n    const { outbound, inbound, months } = selections;\n\n    const outboundCheck = outbound.filter((day) => day.selected).length > 0;\n    const inboundCheck =\n      tripType === 'return'\n        ? inbound.filter((day) => day.selected).length > 0\n        : true;\n    const monthsCheck = months.filter((month) => month.selected).length > 0;\n\n    return outboundCheck && inboundCheck && monthsCheck;\n  }, [selections, tripType]);\n\n  useEffect(() => {\n    if (completed) {\n      if (checkValid()) {\n        setDates();\n      }\n    }\n  }, [selections, completed, checkValid, setDates]);\n\n  return (\n    <div>\n      {component === 'outbound' && (\n        <WeekdaySelector\n          tripType={tripType}\n          direction=\"outbound\"\n          setComponent={setComponent}\n          handleDaySelections={handleDaySelections}\n          handleDurationRange={handleDurationRange}\n        />\n      )}\n      {component === 'inbound' && (\n        <WeekdaySelector\n          tripType={tripType}\n          direction=\"inbound\"\n          setComponent={setComponent}\n          handleDaySelections={handleDaySelections}\n          handleDurationRange={handleDurationRange}\n        />\n      )}\n      {component === 'months' && (\n        <MonthSelector\n          closePopup={closePopup}\n          handleMonthSelections={handleMonthSelections}\n          setDates={setDates}\n          setCompleted={setCompleted}\n        />\n      )}\n    </div>\n  );\n};\n\nconst daysInMonth = ({\n  year,\n  month,\n}: {\n  year: string;\n  month: string;\n}): number => {\n  // Bit hacky but setting the day to be 0 gives the last day of the month === day count\n  const yearNum = isNumeric(year) ? parseInt(year) : 2021;\n  const monthNum = isNumeric(month) ? parseInt(month) : 9;\n  return new Date(yearNum, monthNum, 0).getDate();\n};\n\nconst days = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n\nconst getWeekdayFromMonth = ({\n  day,\n  month,\n  year,\n}: {\n  day: number;\n  month: string;\n  year: string;\n}) => {\n  const stringDate = `${year}-${month}-${day < 10 ? `0${day}` : `${day}`}`;\n  const dayNum: number = new Date(stringDate).getDay();\n  const weekday: string = days[dayNum];\n  return weekday;\n};\n\nconst getWeekdayFromDate = ({ date }: { date: string }) => {\n  const dayNum: number = new Date(date).getDay();\n  const weekday: string = days[dayNum];\n  return weekday;\n};\n\nconst checkWeekday = (day: string) => {\n  return (\n    day === 'Monday' ||\n    day === 'Tuesday' ||\n    day === 'Wednesday' ||\n    day === 'Thursday' ||\n    day === 'Friday' ||\n    day === 'Saturday' ||\n    day === 'Sunday'\n  );\n};\n\nconst datePlusDays = ({\n  date,\n  days,\n}: {\n  date: string;\n  days: number;\n}): string => {\n  const dateDate = new Date(date);\n  const plusDays = new Date(dateDate.setDate(dateDate.getDate() + days));\n  return plusDays.toString();\n};\n","/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/SpecificDatesSelector/SpecificDatesCalendar.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/NormalSelector/NormalCalendar.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/DateSelector.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/WeekdaySelector.tsx",[],"/home/tom/code/react/lets_pop_to/src/features/inspireMe/SelectNewDates/Selectors/WeekdaySelector/MonthsSelector.tsx",[],"/home/tom/code/react/lets_pop_to/src/helpers/isNumeric.ts",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"181","replacedBy":"187"},{"ruleId":"183","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":2,"column":41,"nodeType":"191","messageId":"192","endLine":2,"endColumn":48},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],["193"],["194"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]